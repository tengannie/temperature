{"ast":null,"code":"var _jsxFileName = \"/Users/annie/Documents/Projects/Project-Temperature/src/components/Calculater/TemperatureType.js\";\nimport React from 'react';\nimport classes from './TemperatureType.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureType = props => {\n  const unitChangeHandler = event => {\n    props.setTemperatureType(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['temperature-selection'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['temperature-selection__control'],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose the temperature unit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: unitChangeHandler,\n        value: props.value,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FtoC\",\n          children: \"Fahrenheit to Celsius( \\xB0F to \\xB0C) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CtoF\",\n          children: \"Celsius to Fahrenheit( \\xB0C to \\xB0F)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TemperatureType;\nexport default TemperatureType;\nvar _c;\n$RefreshReg$(_c, \"TemperatureType\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","TemperatureType","props","unitChangeHandler","event","setTemperatureType","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/annie/Documents/Projects/Project-Temperature/src/components/Calculater/TemperatureType.js"],"sourcesContent":["import React from 'react';\nimport classes from './TemperatureType.module.css';\n\nconst TemperatureType = (props) => {\n\n  const unitChangeHandler = (event) => {\nprops.setTemperatureType(event.target.value);\n  }\n\n  return (\n    <div className={classes['temperature-selection']}>\n      <div className={classes['temperature-selection__control']}>\n        <h2>Choose the temperature unit</h2>\n        <select onChange={unitChangeHandler} value={props.value}>\n        <option value='FtoC'>Fahrenheit to Celsius( 째F to 째C) </option>\n          <option value='CtoF'>Celsius to Fahrenheit( 째C to 째F)</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default TemperatureType;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAEjC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACvCF,KAAK,CAACG,kBAAkB,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC1C,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAEV,OAAO,CAAC,uBAAuB,CAAE;IAAAW,QAAA,eAC/CT,OAAA;MAAKQ,SAAS,EAAEV,OAAO,CAAC,gCAAgC,CAAE;MAAAW,QAAA,gBACxDT,OAAA;QAAAS,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCb,OAAA;QAAQc,QAAQ,EAAEX,iBAAkB;QAACI,KAAK,EAAEL,KAAK,CAACK,KAAM;QAAAE,QAAA,gBACxDT,OAAA;UAAQO,KAAK,EAAC,MAAM;UAAAE,QAAA,EAAC;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7Db,OAAA;UAAQO,KAAK,EAAC,MAAM;UAAAE,QAAA,EAAC;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAjBId,eAAe;AAmBrB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}